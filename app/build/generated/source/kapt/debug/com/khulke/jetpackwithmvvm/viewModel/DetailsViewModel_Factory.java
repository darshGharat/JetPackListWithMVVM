// Generated by Dagger (https://dagger.dev).
package com.khulke.jetpackwithmvvm.viewModel;

import androidx.lifecycle.SavedStateHandle;
import com.khulke.jetpackwithmvvm.repository.TwittRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DetailsViewModel_Factory implements Factory<DetailsViewModel> {
  private final Provider<TwittRepository> repositoryProvider;

  private final Provider<SavedStateHandle> saveStateHandleProvider;

  public DetailsViewModel_Factory(Provider<TwittRepository> repositoryProvider,
      Provider<SavedStateHandle> saveStateHandleProvider) {
    this.repositoryProvider = repositoryProvider;
    this.saveStateHandleProvider = saveStateHandleProvider;
  }

  @Override
  public DetailsViewModel get() {
    return newInstance(repositoryProvider.get(), saveStateHandleProvider.get());
  }

  public static DetailsViewModel_Factory create(Provider<TwittRepository> repositoryProvider,
      Provider<SavedStateHandle> saveStateHandleProvider) {
    return new DetailsViewModel_Factory(repositoryProvider, saveStateHandleProvider);
  }

  public static DetailsViewModel newInstance(TwittRepository repository,
      SavedStateHandle saveStateHandle) {
    return new DetailsViewModel(repository, saveStateHandle);
  }
}
